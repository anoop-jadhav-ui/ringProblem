/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 --types ./public/ringProblem.glb --transform -s
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ring1: THREE.Mesh
    ring2: THREE.Mesh
    diamond2: THREE.Mesh
    diamond1: THREE.Mesh
    ringholder: THREE.Mesh
    diamond3: THREE.Mesh
    base: THREE.Mesh
  }
  materials: {}
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/ringProblem-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.ring1.geometry} material={nodes.ring1.material} rotation={[0, 0, -Math.PI / 2]} />
      <mesh castShadow receiveShadow geometry={nodes.ring2.geometry} material={nodes.ring2.material} rotation={[0, 0, -Math.PI / 2]} />
      <mesh castShadow receiveShadow geometry={nodes.diamond2.geometry} material={nodes.diamond2.material} position={[0, 1.35, 0]} rotation={[Math.PI, 0, Math.PI]} scale={0.39} />
      <mesh castShadow receiveShadow geometry={nodes.diamond1.geometry} material={nodes.diamond1.material} position={[0, 1.39, 0]} scale={0.41} />
      <mesh castShadow receiveShadow geometry={nodes.ringholder.geometry} material={nodes.ringholder.material} position={[0, -0.44, 0]} scale={1.37} />
      <mesh castShadow receiveShadow geometry={nodes.diamond3.geometry} material={nodes.diamond3.material} position={[0, 1.36, 0]} scale={0.41} />
      <mesh castShadow receiveShadow geometry={nodes.base.geometry} material={nodes.base.material} position={[0, -1.2, 0]} scale={2.11} />
    </group>
  )
}

useGLTF.preload('/ringProblem-transformed.glb')
